{
  "api": {
    "base_url": "https://www.virustotal.com/api/v3",
    "endpoints": [
      {
        "description": "Get file scan report by hash (MD5, SHA1, SHA256)",
        "method": "GET",
        "parameters": [
          {
            "description": "MD5, SHA1, or SHA256 hash",
            "example": "44d88612fea8a8f36de82e1278abb02f",
            "name": "file_hash",
            "required": true,
            "type": "string"
          }
        ],
        "path": "/files/{file_hash}"
      },
      {
        "description": "Scan a URL",
        "method": "POST",
        "parameters": [
          {
            "description": "URL to scan",
            "example": "https://example.com",
            "name": "url",
            "required": true,
            "type": "string"
          }
        ],
        "path": "/urls"
      },
      {
        "description": "Get domain report",
        "method": "GET",
        "parameters": [
          {
            "description": "Domain name",
            "example": "example.com",
            "name": "domain",
            "required": true,
            "type": "string"
          }
        ],
        "path": "/domains/{domain}"
      },
      {
        "description": "Get IP address report",
        "method": "GET",
        "parameters": [
          {
            "description": "IPv4 or IPv6 address",
            "example": "8.8.8.8",
            "name": "ip",
            "required": true,
            "type": "string"
          }
        ],
        "path": "/ip_addresses/{ip}"
      }
    ],
    "rate_limit": {
      "notes": "Free tier limits: 4 req/min, 500 req/day. Academic/research programs available with higher limits.",
      "requests_per_day": 500,
      "requests_per_minute": 4
    },
    "type": "REST"
  },
  "authentication": {
    "notes": "FREE account required. Register at virustotal.com. Free tier: 500 requests/day, 4 requests/minute. Academic researchers may request higher limits.",
    "required": true,
    "type": "api_key"
  },
  "authority": 95,
  "category": "threat-intelligence",
  "coverage": 90,
  "data_coverage": {
    "antivirus_engines": "70+ security vendors",
    "data_points": [
      "Malware detection results",
      "File reputation",
      "URL reputation",
      "Domain reputation",
      "IP reputation",
      "File behavior analysis",
      "Network communications",
      "Detected signatures",
      "Community votes"
    ],
    "temporal": {
      "historical_data": "Limited in free tier",
      "latency": "Real-time scanning"
    },
    "total_samples": "Billions of files and URLs analyzed",
    "update_frequency": "real-time"
  },
  "description": "FREE tier of VirusTotal for file, URL, domain, and IP reputation checks. Limited to 500 requests per day and 4 requests per minute without authentication.",
  "documentation": "https://docs.virustotal.com/reference/overview",
  "format": "json",
  "id": "virustotal-free",
  "integration_examples": {
    "curl": {
      "domain_check": "# Check domain reputation\ncurl -H \"x-apikey: YOUR_API_KEY\" \\\n  https://www.virustotal.com/api/v3/domains/example.com",
      "file_report": "# Get file report - counts against 500/day limit!\ncurl -H \"x-apikey: YOUR_API_KEY\" \\\n  https://www.virustotal.com/api/v3/files/44d88612fea8a8f36de82e1278abb02f",
      "url_scan": "# Submit URL for scanning - uses 1 of 500 daily requests\ncurl -X POST -H \"x-apikey: YOUR_API_KEY\" \\\n  -F \"url=https://example.com\" \\\n  https://www.virustotal.com/api/v3/urls"
    },
    "javascript": {
      "fetch_report": "// VirusTotal Free tier - 500 req/day limit!\nconst checkFileHash = async (apiKey, fileHash) => {\n  const url = `https://www.virustotal.com/api/v3/files/${fileHash}`;\n  \n  const response = await fetch(url, {\n    headers: {\n      'x-apikey': apiKey\n    }\n  });\n  \n  if (response.status === 429) {\n    console.error('Rate limit exceeded (4 req/min or 500/day)');\n    return null;\n  }\n  \n  const data = await response.json();\n  \n  if (data.data) {\n    const stats = data.data.attributes.last_analysis_stats;\n    console.log(`Malicious: ${stats.malicious}`);\n    console.log(`Suspicious: ${stats.suspicious}`);\n    console.log(`Clean: ${stats.undetected}`);\n  }\n  \n  return data;\n};\n\n// Usage - be mindful of limits!\nconst apiKey = 'YOUR_API_KEY';\nconst hash = '44d88612fea8a8f36de82e1278abb02f';\ncheckFileHash(apiKey, hash);"
    },
    "python": {
      "basic_lookup": "import vt\nimport asyncio\n\nasync def check_file_hash(api_key, file_hash):\n    async with vt.Client(api_key) as client:\n        try:\n            file = await client.get_object(f\"/files/{file_hash}\")\n            \n            # Get detection stats\n            stats = file.last_analysis_stats\n            print(f\"Detection: {stats['malicious']}/{stats['undetected']}\")\n            \n            # Show positive detections\n            for scanner, result in file.last_analysis_results.items():\n                if result['category'] == 'malicious':\n                    print(f\"  {scanner}: {result['result']}\")\n                    \n        except vt.error.APIError as e:\n            print(f\"Error: {e}\")\n\n# Usage - FREE tier (500/day limit!)\napi_key = 'YOUR_API_KEY'\nfile_hash = '44d88612fea8a8f36de82e1278abb02f'\nasyncio.run(check_file_hash(api_key, file_hash))",
      "quota_aware": "import vt\nimport json\nimport time\nfrom datetime import datetime, timedelta\n\nclass VirusTotalFree:\n    \"\"\"VirusTotal client with quota tracking for free tier\"\"\"\n    \n    def __init__(self, api_key, cache_file='vt_usage.json'):\n        self.api_key = api_key\n        self.daily_limit = 500\n        self.rate_limit = 4  # per minute\n        self.cache_file = cache_file\n        self.usage = self.load_usage()\n    \n    def load_usage(self):\n        try:\n            with open(self.cache_file, 'r') as f:\n                return json.load(f)\n        except:\n            return {'date': None, 'count': 0, 'cache': {}}\n    \n    def save_usage(self):\n        with open(self.cache_file, 'w') as f:\n            json.dump(self.usage, f)\n    \n    def reset_if_new_day(self):\n        today = datetime.now().strftime('%Y-%m-%d')\n        if self.usage['date'] != today:\n            self.usage = {'date': today, 'count': 0, 'cache': {}}\n            self.save_usage()\n    \n    def check_hash(self, file_hash):\n        self.reset_if_new_day()\n        \n        # Check cache first\n        if file_hash in self.usage['cache']:\n            print(f\"\ud83d\udce6 Using cached result for {file_hash}\")\n            return self.usage['cache'][file_hash]\n        \n        # Check daily quota\n        if self.usage['count'] >= self.daily_limit:\n            return {'error': f'Daily limit reached ({self.daily_limit} requests)'}\n        \n        # Make API call with rate limiting\n        time.sleep(15)  # Ensure 4 req/min limit\n        \n        # API call would go here\n        result = {'status': 'checked', 'hash': file_hash}\n        \n        # Update usage\n        self.usage['count'] += 1\n        self.usage['cache'][file_hash] = result\n        self.save_usage()\n        \n        print(f\"\u2713 Checked {file_hash} ({self.usage['count']}/{self.daily_limit} today)\")\n        return result\n\n# Usage\nclient = VirusTotalFree('YOUR_API_KEY')\nresult = client.check_hash('44d88612fea8a8f36de82e1278abb02f')",
      "setup": "# Install VirusTotal Python client\npip install vt-py"
    }
  },
  "last_updated": "2025-08-15T16:00:00.000Z",
  "metadata": {
    "alternatives": [
      "hybrid-analysis",
      "malwarebazaar",
      "joe-sandbox"
    ],
    "last_verified": "2025-08-15",
    "license": "Proprietary",
    "maintainer": "VirusTotal (Google)",
    "upgrade_paths": {
      "enterprise": "Custom pricing - Unlimited",
      "premium": "$200/month - 30,000 req/day"
    }
  },
  "name": "VirusTotal Free Tier",
  "operational_guidance": {
    "best_practices": [
      "Cache results to stay within daily limits",
      "Implement rate limiting (4 req/min)",
      "Track daily usage to avoid hitting 500 req limit",
      "Use file hashes for lookups when possible",
      "Consider academic program for research",
      "Batch similar requests efficiently"
    ],
    "common_use_cases": [
      "File hash reputation checks",
      "URL safety verification",
      "Domain reputation lookups",
      "IP address reputation",
      "Malware sample analysis",
      "Threat hunting",
      "Security incident investigation"
    ],
    "limitations": [
      "Only 500 requests per day",
      "4 requests per minute maximum",
      "No bulk downloads",
      "Limited historical data access",
      "No hunting capabilities in free tier",
      "File upload limited to 32MB"
    ],
    "recommended_update_frequency": "On-demand only due to strict limits",
    "value_proposition": "Essential malware scanning with 70+ AV engines, but very limited daily quota"
  },
  "quality_metrics": {
    "accessibility": "Requires free registration",
    "api_stability": "Stable v3 API",
    "completeness": "Comprehensive malware detection",
    "cost": "FREE with strict limits (500 req/day)",
    "data_quality": "Industry-leading multi-engine scanning",
    "reliability": "excellent",
    "update_speed": "Real-time"
  },
  "quality_score": 87,
  "subcategory": "malware",
  "url": "https://www.virustotal.com"
}
