# Pre-commit hooks for data-sources repository
# See https://pre-commit.com for more information
# Install: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Built-in hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.md$'
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--allow-multiple-documents']
      - id: check-json
        exclude: 'data-sources/.*\.json$'  # Allow flexible JSON in data sources
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: pretty-format-json
        args: ['--autofix', '--indent=2']
        exclude: 'data-sources/.*\.json$'  # Don't auto-format data source files

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=88']

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=88']

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        additional_dependencies:
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-docstrings
          - flake8-simplify
        args:
          - '--max-line-length=88'
          - '--extend-ignore=E203,W503,D100,D104'  # Ignore conflicts with black and missing docstrings for modules/packages
          - '--per-file-ignores=tests/*:E402'  # Allow imports after sys.path modification in tests

  # Python type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        additional_dependencies:
          - types-requests
          - types-python-dateutil
        args: ['--ignore-missing-imports', '--strict']
        exclude: '^tests/'

  # Security linting
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        args: ['-r', '-f', 'json']
        exclude: '^tests/'

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: ['-d', 'relaxed']

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.42.0
    hooks:
      - id: markdownlint
        args: ['--disable', 'MD013', 'MD033', 'MD041']  # Disable line length, HTML, first line checks

  # JSON Schema validation for data sources
  - repo: local
    hooks:
      - id: validate-data-sources
        name: Validate data source files against schema
        entry: python tools/validate_sources.py
        language: system
        files: '(data-sources/.*\.json|schemas/.*\.json)$'
        pass_filenames: false

  # Python testing
  - repo: local
    hooks:
      - id: pytest-check
        name: Run pytest
        entry: python -m pytest tests/unit/ -x --tb=short
        language: system
        files: '(tools/.*\.py|tests/.*\.py)$'
        pass_filenames: false


# Configuration for specific tools
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [mypy, pytest-check, validate-data-sources]  # Skip slow hooks in CI
  submodules: false
