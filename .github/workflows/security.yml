name: Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scans weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install safety bandit semgrep

      - name: Run Bandit security scan
        run: |
          bandit -r tools/ -f sarif -o bandit-results.sarif
        continue-on-error: true

      - name: Upload Bandit results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: bandit-results.sarif
          category: bandit

      - name: Run Safety dependency vulnerability scan
        run: |
          safety check --json --output safety-results.json
        continue-on-error: true

      - name: Run Semgrep security scan
        run: |
          semgrep --config=auto --sarif --output=semgrep-results.sarif tools/
        continue-on-error: true

      - name: Upload Semgrep results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: semgrep-results.sarif
          category: semgrep

      - name: Check for secrets with TruffleHog
        uses: trufflesecurity/trufflehog@v3.63.2-beta
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          base-ref: ${{ github.event.pull_request.base.sha }}
          head-ref: ${{ github.event.pull_request.head.sha }}
          fail-on-severity: moderate

  license-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install pip-licenses

      - name: Check licenses
        run: |
          pip-licenses --format json --output-file licenses.json
          pip-licenses --format table --output-file licenses.txt

      - name: Upload license information
        uses: actions/upload-artifact@v3
        with:
          name: license-information
          path: |
            licenses.json
            licenses.txt
